name: Deploy

on:
  push: 
    branches: 
      - main

jobs:
  determine-version:
    name: Determine Application Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Git Version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          # A string to determine the format of the version output
          format: "${major}.${minor}.${increment}"


  push-versioned-image:
    name: Build and Push Image
    runs-on: ubuntu-latest
    needs: [determine-version]
    env: 
      VERSION: ${{ needs.determine-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Settings.xml file with injected environment variables
        working-directory: ./application/
        run: envsubst < .m2/settings.xml
      
      - name: Build and Push Image
        working-directory: ./application
        run: make build
      
  push-latest-image:
    name: Tag and Pushed Image as Latest
    runs-on: ubuntu-latest
    needs: [determine-version, push-versioned-image]
    env: 
      VERSION: ${{ needs.determine-version.outputs.version }}
    steps: 
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Pull Pushed Image
        run: docker pull ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REGISTRY }}:${{ env.VERSION }}

      - name: Tag Pushed Image as the latest image 
        run: docker tag ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REGISTRY }}:${{ env.VERSION }} ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REGISTRY }}:latest
      
      - name: Push Docker Run
        run: docker push ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REGISTRY }}:latest

  deploy-image:
    name: Deploy Versioned Image to Azure k8s Cluster
    runs-on: ubuntu-latest
    needs: [determine-version, push-versioned-image]
    env: 
      VERSION: ${{ needs.determine-version.outputs.version }}
    steps:
    # Set the target AKS cluster.
      - name: Link k8s cluster
        uses: Azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: assignment-willem
          resource-group: assignment-willem-group
      - name: Setup Helm
        uses: azure/setup-helm@v3
      
      - run: helm install .ops/chart
